#compdef docker-exec

__docker-exec_runningcontainers() {
    local expl
    declare -a running stopped lines

    lines=(${(f)"$(_call_program commands docker ps)"})

    # Parse header line to find columns
    local i=1 j=1 k header=${lines[1]}
    declare -A begin end
    while (( $j < ${#header} - 1 )) {
        i=$(( $j + ${${header[$j,-1]}[(i)[^ ]]} - 1))
        j=$(( $i + ${${header[$i,-1]}[(i)  ]} - 1))
        k=$(( $j + ${${header[$j,-1]}[(i)[^ ]]} - 2))
        begin[${header[$i,$(($j-1))]}]=$i
        end[${header[$i,$(($j-1))]}]=$k
    }
    lines=(${lines[2,-1]})

    # Container ID
    local line
    local s
    for line in $lines; do
        s="${line[${begin[CONTAINER ID]},${end[CONTAINER ID]}]%% ##}"
        s="$s:${(l:15:: :::)${${line[${begin[CREATED]},${end[CREATED]}]/ ago/}%% ##}}"
        s="$s, ${${${line[$begin[IMAGE],$end[IMAGE]]}/:/\\:}%% ##}"
        if [[ ${line[${begin[STATUS]},${end[STATUS]}]} = Exit* ]]; then
            stopped=($stopped $s)
        else
            running=($running $s)
        fi
    done

    # Names
    local name
    local -a names
    for line in $lines; do
        names=(${(ps:,:)${${line[${begin[NAMES]},-1]}%% *}})
        for name in $names; do
            s="${name}:${(l:15:: :::)${${line[${begin[CREATED]},${end[CREATED]}]/ ago/}%% ##}}"
            s="$s, ${${${line[$begin[IMAGE],$end[IMAGE]]}/:/\\:}%% ##}"
            if [[ ${line[${begin[STATUS]},${end[STATUS]}]} = Exit* ]]; then
                stopped=($stopped $s)
            else
                running=($running $s)
            fi
        done
    done

    _describe -t containers-running "running containers" running
}

_docker-exec () {
    local curcontext="$curcontext" state line
    typeset -A opt_args

    _arguments -C \
        '(-n --nmk)'{-n,--nmk}'[run NMK rather than interactive shell]' \
        '(-s --ssh)'{-s,--ssh}'[print ssh command and exit]' \
        '(-u --user)'{-u,--user}'[username or UID]' \
        '(-): :->running-containers' && return

    case $state in
        (running-containers)
            __docker-exec_runningcontainers
            ;;
    esac
}

_docker-exec "$@"

# vim: ft=zsh sw=4 sts=4 ts=4
