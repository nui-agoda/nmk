#!/bin/sh

set -e

export DEBIAN_FRONTEND=noninteractive
_ARCHIVE='/opt/nmk/nmk.tar.gz'
_MOUNTED_NMK_DIR="/mnt"
_PROXY_CONFIG='/etc/apt/apt.conf.d/99nmk-proxy'

APT_IGNORE_UPDATE_ERRORS=${APT_IGNORE_UPDATE_ERRORS:-0}
APT_KEEP_INDEX_FILES=${APT_KEEP_INDEX_FILES:-0}
APT_PROXY=${APT_PROXY:-0}
APT_PROXY_URI=${APT_PROXY_URI:-'172.17.0.1:3142'}
APT_UPDATE=${APT_UPDATE:-0}
APT_UPGRADE=${APT_UPGRADE:-0}
_APT_PROXY_CONFIG_STRING='Acquire::http::Proxy "http://'"$APT_PROXY_URI"'";'

DISTRO=${DISTRO:-ubuntu}

# Functions {{{
init() {
    local tmpdir="$(mktemp -d)"
    rmdir "$tmpdir"
    cp -R "$_MOUNTED_NMK_DIR" "$tmpdir"
    echo '--> use a copy of mounted nmk'
    _NMK_COPY="$tmpdir"
}

proxy_add_config() {
    # if config exist, don't add and clean up.
    if [ ! -f "$_PROXY_CONFIG" ]; then
        echo "$_APT_PROXY_CONFIG_STRING" > $_PROXY_CONFIG
        _PROXY_CLEANUP=1
    fi
}

proxy_rm_config() {
    if [ "$_PROXY_CLEANUP" = 1 ]; then rm "$_PROXY_CONFIG"; fi
}

setup_system() {
    if [ "$DISTRO" = debian ] || [ "$DISTRO" = ubuntu ]; then
        if [ "$APT_PROXY" = 1 ]; then
            echo '--> add apt-get proxy configuration'
            proxy_add_config;
        fi
        if [ "$APT_UPDATE" = 1 ]; then
            echo '--> apt-get update'
            if [ "$APT_IGNORE_UPDATE_ERRORS" = 1 ]; then
                apt-get update || true
            else
                apt-get update
            fi
        fi
        if [ "$APT_UPGRADE" = 1 ]; then
            echo '--> apt-get upgrade'
            apt-get -y upgrade
        fi
        if [ "$DISTRO" = ubuntu ]; then
            locale-gen 'en_US.UTF-8'
        else # debian
            apt-get -yq install locales
            echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
            locale-gen 'en_US.utf8'
        fi
        apt-get -yq install exuberant-ctags git tmux vim-nox zsh
        if [ "$APT_PROXY" = 1 ]; then
            echo '--> remove apt-get proxy'
            proxy_rm_config
        fi
        if [ "$APT_UPDATE" = 1 ] && [ "$APT_KEEP_INDEX_FILES" != 1 ]; then
            rm -rf /var/lib/apt/lists/*
        fi
    elif [ "$DISTRO" = fedora ]; then
        for package in ctags git tar tmux vim zsh; do
            yum install -y $package
        done
        localedef -c -i en_US -f UTF-8 en_US.UTF-8
        yum clean all
    else
        >&2 echo 'Unsupported distro'
        exit 1
    fi
}

setup_archive() {
    # setup to temporary folder
    local curdir="$(pwd)"
    local tmpdir="$(mktemp -d)"
    cd "$tmpdir"
    "$_NMK_COPY/setup/automate" -r "$_NMK_COPY" .
    # make nmk archive
    local basedir=$(dirname "$_ARCHIVE")
    if [ ! -d $basedir ]; then mkdir "$basedir"; fi
    tar caf "$_ARCHIVE" .
    chmod 644 "$_ARCHIVE"
    cd "$curdir"
    rm -rf "$tmpdir"
}

setup_launcher() {
    local launcher='/usr/bin/nmk'
    install "$_NMK_COPY/setup/launcher" "$launcher"
    sed -i "s#^\(_ARCHIVE=\).*#\1$_ARCHIVE#" "$launcher"
}

cleanup() {
    rm -rf "$_NMK_COPY"
}
# }}}

init
setup_system
setup_archive
setup_launcher
cleanup
